//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankClient.BankService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/BankService.Entity")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartnerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartnerPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PinCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderAmount {
            get {
                return this.OrderAmountField;
            }
            set {
                if ((this.OrderAmountField.Equals(value) != true)) {
                    this.OrderAmountField = value;
                    this.RaisePropertyChanged("OrderAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderCode {
            get {
                return this.OrderCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderCodeField, value) != true)) {
                    this.OrderCodeField = value;
                    this.RaisePropertyChanged("OrderCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerCode {
            get {
                return this.PartnerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerCodeField, value) != true)) {
                    this.PartnerCodeField = value;
                    this.RaisePropertyChanged("PartnerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerPassword {
            get {
                return this.PartnerPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerPasswordField, value) != true)) {
                    this.PartnerPasswordField = value;
                    this.RaisePropertyChanged("PartnerPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((this.PinCodeField.Equals(value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionHistory", Namespace="http://schemas.datacontract.org/2004/07/BankService.Entity")]
    [System.SerializableAttribute()]
    public partial class TransactionHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TransactionAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TransactionFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TransactionAmount {
            get {
                return this.TransactionAmountField;
            }
            set {
                if ((this.TransactionAmountField.Equals(value) != true)) {
                    this.TransactionAmountField = value;
                    this.RaisePropertyChanged("TransactionAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionCode {
            get {
                return this.TransactionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionCodeField, value) != true)) {
                    this.TransactionCodeField = value;
                    this.RaisePropertyChanged("TransactionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((this.TransactionDateField.Equals(value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TransactionFee {
            get {
                return this.TransactionFeeField;
            }
            set {
                if ((this.TransactionFeeField.Equals(value) != true)) {
                    this.TransactionFeeField = value;
                    this.RaisePropertyChanged("TransactionFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionName {
            get {
                return this.TransactionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionNameField, value) != true)) {
                    this.TransactionNameField = value;
                    this.RaisePropertyChanged("TransactionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="BankService", ConfigurationName="BankService.IBankService")]
    public interface IBankService {
        
        [System.ServiceModel.OperationContractAttribute(Action="BankService/IBankService/GetInfo", ReplyAction="BankService/IBankService/GetInfoResponse")]
        BankClient.BankService.Account GetInfo(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="BankService/IBankService/GetInfo", ReplyAction="BankService/IBankService/GetInfoResponse")]
        System.Threading.Tasks.Task<BankClient.BankService.Account> GetInfoAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="BankService/IBankService/WithDraw", ReplyAction="BankService/IBankService/WithDrawResponse")]
        BankClient.BankService.TransactionHistory WithDraw(string username, string password, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="BankService/IBankService/WithDraw", ReplyAction="BankService/IBankService/WithDrawResponse")]
        System.Threading.Tasks.Task<BankClient.BankService.TransactionHistory> WithDrawAsync(string username, string password, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="BankService/IBankService/Deposit", ReplyAction="BankService/IBankService/DepositResponse")]
        BankClient.BankService.TransactionHistory Deposit(string username, string password, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="BankService/IBankService/Deposit", ReplyAction="BankService/IBankService/DepositResponse")]
        System.Threading.Tasks.Task<BankClient.BankService.TransactionHistory> DepositAsync(string username, string password, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="BankService/IBankService/Tranfer", ReplyAction="BankService/IBankService/TranferResponse")]
        BankClient.BankService.TransactionHistory Tranfer(string username, string password, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="BankService/IBankService/Tranfer", ReplyAction="BankService/IBankService/TranferResponse")]
        System.Threading.Tasks.Task<BankClient.BankService.TransactionHistory> TranferAsync(string username, string password, double amount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBankServiceChannel : BankClient.BankService.IBankService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BankServiceClient : System.ServiceModel.ClientBase<BankClient.BankService.IBankService>, BankClient.BankService.IBankService {
        
        public BankServiceClient() {
        }
        
        public BankServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BankServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BankClient.BankService.Account GetInfo(string username, string password) {
            return base.Channel.GetInfo(username, password);
        }
        
        public System.Threading.Tasks.Task<BankClient.BankService.Account> GetInfoAsync(string username, string password) {
            return base.Channel.GetInfoAsync(username, password);
        }
        
        public BankClient.BankService.TransactionHistory WithDraw(string username, string password, double amount) {
            return base.Channel.WithDraw(username, password, amount);
        }
        
        public System.Threading.Tasks.Task<BankClient.BankService.TransactionHistory> WithDrawAsync(string username, string password, double amount) {
            return base.Channel.WithDrawAsync(username, password, amount);
        }
        
        public BankClient.BankService.TransactionHistory Deposit(string username, string password, double amount) {
            return base.Channel.Deposit(username, password, amount);
        }
        
        public System.Threading.Tasks.Task<BankClient.BankService.TransactionHistory> DepositAsync(string username, string password, double amount) {
            return base.Channel.DepositAsync(username, password, amount);
        }
        
        public BankClient.BankService.TransactionHistory Tranfer(string username, string password, double amount) {
            return base.Channel.Tranfer(username, password, amount);
        }
        
        public System.Threading.Tasks.Task<BankClient.BankService.TransactionHistory> TranferAsync(string username, string password, double amount) {
            return base.Channel.TranferAsync(username, password, amount);
        }
    }
}
